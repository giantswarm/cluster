# Auto-generated by helm-values-gen, do not edit!

global:
  apps:
    capiNodeLabeler: {}
    certExporter: {}
    certManager: {}
    chartOperatorExtensions: {}
    cilium: {}
    ciliumServiceMonitors: {}
    clusterAutoscaler: {}
    coreDns: {}
    coreDnsExtensions: {}
    etcdDefrag: {}
    etcdKubernetesResourcesCountExporter: {}
    externalDns: {}
    giantswarmClusterSuite: {}
    k8sAuditMetrics: {}
    k8sDnsNodeCache: {}
    metricsServer: {}
    netExporter: {}
    networkPolicies: {}
    nodeExporter: {}
    observabilityBundle: {}
    observabilityPolicies: {}
    prometheusBlackboxExporter: {}
    securityBundle: {}
    teleportKubeAgent: {}
    verticalPodAutoscaler: {}
    verticalPodAutoscalerCrd: {}
  components:
    auditd:
      enabled: false
    containerd:
      containerRegistries:
        docker.io:
          - endpoint: registry-1.docker.io
          - endpoint: giantswarm.azurecr.io
        gsoci.azurecr.io:
          - endpoint: gsoci.azurecr.io
      localRegistryCache:
        enabled: false
        mirroredRegistries: []
        port: 32767
      managementClusterRegistryCache:
        enabled: true
        mirroredRegistries:
          - gsoci.azurecr.io
    selinux:
      mode: permissive
  connectivity:
    bastion:
      enabled: true
      replicas: 1
    network:
      allowAllEgress: false
      pods:
        cidrBlocks:
          - 100.64.0.0/12
        nodeCidrMaskSize: 25
      services:
        cidrBlocks:
          - 172.31.0.0/16
    proxy:
      enabled: false
  controlPlane:
    apiServerPort: 6443
    customNodeTaints: []
    machineHealthCheck:
      enabled: true
      maxUnhealthy: 40%
      nodeStartupTimeout: 8m0s
      unhealthyNotReadyTimeout: 10m0s
      unhealthyUnknownTimeout: 10m0s
    oidc: {}
    replicas: 3
  metadata:
    preventDeletion: false
    servicePriority: highest
  podSecurityStandards:
    enforced: false
  release: {}
internal:
  advancedConfiguration:
    appPlatform:
      fluxBackend: false
    cgroupsv1: false
    controlPlane:
      apiServer:
        admissionConfiguration: {}
        auditPolicy: {}
        enablePriorityAndFairness: true
        featureGates:
          - enabled: true
            name: StatefulSetAutoDeletePVC
      controllerManager:
        featureGates:
          - enabled: true
            name: StatefulSetAutoDeletePVC
        terminatedPodGCThreshold: 125
      etcd:
        experimental: {}
        quotaBackendBytesGiB: 8
      rolloutBefore:
        certificatesExpiryDays: 180
    kubelet:
      containerLogMaxFiles: 0
      containerLogMaxSize: ""
      insecure: false
      kubeReserved:
        cpu: 350m
        ephemeralStorage: 1024Mi
        memory: 1280Mi
      systemReserved:
        cpu: 250m
        memory: 384Mi
    registry: gsoci.azurecr.io
    workers: {}
  ephemeralConfiguration:
    offlineTesting: {}
providerIntegration:
  apps:
    capiNodeLabeler:
      enable: false
    certExporter:
      enable: false
    certManager:
      enable: false
    chartOperatorExtensions:
      enable: false
    cilium:
      enable: false
    ciliumServiceMonitors:
      enable: false
    clusterAutoscaler:
      enable: false
    coreDns:
      enable: false
    coreDnsExtensions:
      enable: false
    etcdDefrag:
      enable: false
    etcdKubernetesResourcesCountExporter:
      enable: false
    externalDns:
      enable: false
    giantswarmClusterSuite:
      enable: false
    k8sAuditMetrics:
      enable: false
    k8sDnsNodeCache:
      enable: false
    metricsServer:
      enable: false
    netExporter:
      enable: false
    networkPolicies:
      enable: false
    nodeExporter:
      enable: false
    observabilityBundle:
      enable: false
    observabilityPolicies:
      enable: false
    prometheusBlackboxExporter:
      enable: false
    securityBundle:
      enable: false
    teleportKubeAgent:
      enable: false
    verticalPodAutoscaler:
      enable: false
    verticalPodAutoscalerCrd:
      enable: false
  bastion:
    kubeadmConfig:
      ignition:
        containerLinuxConfig:
          additionalConfig:
            storage: {}
            systemd: {}
  components:
    containerd:
      sandboxContainerImage:
        name: giantswarm/pause
        tag: "3.9"
  connectivity:
    proxy:
      noProxy: {}
    sshSsoPublicKey: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIM4cvZ01fLmO9cJbWUj7sfF+NhECgy+Cl0bazSrZX7sU vault-ca@vault.operations.giantswarm.io
  controlPlane:
    kubeadmConfig:
      clusterConfiguration:
        apiServer: {}
        controllerManager: {}
      diskSetup: {}
      ignition:
        containerLinuxConfig:
          additionalConfig:
            storage: {}
            systemd: {}
      taints: []
    resources:
      controlPlane:
        api:
          group: controlplane.cluster.x-k8s.io
          kind: KubeadmControlPlane
          version: v1beta1
      infrastructureMachineTemplate: {}
  environmentVariables: {}
  kubeadmConfig:
    enableGiantswarmUser: false
    ignition:
      containerLinuxConfig:
        additionalConfig:
          storage: {}
          systemd: {}
    taints: []
  kubernetesVersion: 1.25.16
  osImage:
    channel: stable
  registry: {}
  resourcesApi:
    bastionResourceEnabled: true
    cleanupHelmReleaseResourcesEnabled: false
    clusterResourceEnabled: true
    controlPlaneResourceEnabled: true
    helmRepositoryResourcesEnabled: false
    infrastructureCluster: {}
    machineHealthCheckResourceEnabled: true
    machinePoolResourcesEnabled: true
  teleport:
    enabled: true
    initialJoinToken: ""
    proxyAddr: teleport.giantswarm.io:443
    version: 16.1.7
  useReleases: false
  workers:
    kubeadmConfig:
      ignition:
        containerLinuxConfig:
          additionalConfig:
            storage: {}
            systemd: {}
      taints: []
    resources: {}
