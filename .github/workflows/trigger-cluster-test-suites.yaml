name: Trigger cluster-test-suites

on:
  issue_comment:
    types: [created]
  # temporary for the sake of testing
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  trigger-cluster-test-suites:
    # if: startsWith(github.event.comment.body, '/run cluster-test-suites') && github.event.issue.pull_request != ''
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Git
      run: |
        git config --local user.email "dev@giantswarm.io"
        git config --local user.name "taylorbot"

    - name: Clone cluster chart repository
      run: |
        git clone https://github.com/giantswarm/cluster.git

    - name: Get custom cluster chart version
      id: latest_release
      run: |
        cd cluster
        git fetch --tags
        latest_release=$(git describe --tags $(git rev-list --tags --max-count=1))
        latest_commit_sha=$(git rev-parse --verify HEAD)
        echo "Custom cluster chart version is $latest_release-$latest_commit_sha"
        echo "custom_cluster_chart_version=$latest_release-$latest_commit_sha" >> $GITHUB_ENV

    - name: Clone cluster-aws repository
      run: |
        git clone https://github.com/giantswarm/cluster-aws.git

    - name: Check if branch exists in cluster-aws repo
      id: check_branch
      run: |
        cd cluster-aws
        pr_number="${{ github.event.issue.number }}"
        if [ -z "$pr_number" ]; then
          pr_number="${{ github.event.number }}"
        fi
        echo "Pull request number is $pr_number."
        
        # Check if branch exists
        branch_name="test-cluster-chart-pr-$pr_number"
        echo "cluster_aws_branch_name=$branch_name" >> $GITHUB_ENV
        repo_url="https://github.com/giantswarm/cluster-aws"
        if git ls-remote --heads "$repo_url" | grep -q "refs/heads/$branch_name"; then
          echo "Found that cluster-aws already has the branch $branch_name. Will update it if needed."
          echo "branch_exists=true" >> $GITHUB_ENV
        else
          echo "Found that cluster-aws does not have the branch $branch_name. Will create it."
          echo "branch_exists=false" >> $GITHUB_ENV
        fi

    - name: Create new cluster-aws branch
      if: env.branch_exists == 'false'
      run: |
        cd cluster-aws
        git checkout -b ${{ env.cluster_aws_branch_name }}

    - name: Checkout existing cluster-aws branch
      if: env.branch_exists == 'true'
      run: |
        cd cluster-aws
        git checkout ${{ env.cluster_aws_branch_name }}

    - name: Update cluster chart version in Chart.yaml
      run: |
        cd cluster-aws/helm/cluster-aws
        current_version="$(yq e '.dependencies[] | select(.name == "cluster").version' Chart.yaml)"
        new_version="${{ env.custom_cluster_chart_version }}"

        if [ $new_version != $current_version ]; then
          echo "Updating cluster chart version"
          new_version="$new_version" yq e '.dependencies[] |= select(.name == "cluster") * {"version": strenv(new_version)}' -i Chart.yaml
          
          echo "Updated cluster chart version. Chart.yaml content is now:\n"
          cat Chart.yaml

          # Retry logic for helm dependency update
          retry=0
          max_retries=20
          success=false

          while [ $retry -lt $max_retries ]; do
            if helm dependency update; then
              success=true
              break
            else
              retry=$((retry + 1))
              echo "Retry $retry/$max_retries: helm dependency update failed, retrying in 15 seconds..."
              sleep 15
            fi
          done

          if [ "$success" = false ]; then
            echo "helm dependency update failed after $max_retries retries"
            exit 1
          fi

          echo "cluster_chart_version_updated=true" >> $GITHUB_ENV
        else
          echo "Cluster chart version is already up-to-date."
          echo "cluster_chart_version_updated=false" >> $GITHUB_ENV
        fi

    - name: Commit and push changes
      if: env.cluster_chart_version_updated == 'true'
      run: |
        cd cluster-aws
        git add helm/cluster-aws/Chart.yaml
        git add helm/cluster-aws/Chart.lock
        git commit -m "Update cluster chart version to ${{ env.custom_cluster_chart_version }}"
        echo "Will push now"
        # git push origin ${{ env.cluster_aws_branch_name }}
